@model TabloidMVC.Models.ViewModels.UserProfileViewModel

@{
    ViewData["Title"] = $"Change User Type - {Model.UserProfile.DisplayName}";
}

<div class="container pt-5">
    <div class="user">
        <section class="px-3">
            <div class="row justify-content-between">
                <h1>Change User Type - @Model.UserProfile.DisplayName</h1>
            </div>
            <h4></h4>
            <hr />
            <form asp-action="EditType">
                <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.UserProfile.UserType)
                </dt>
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <input asp-for="UserProfile.Id" type="hidden" class="form-control" />
                    </div>
                    <div class="form-group">
                        <select placeholder="UserTypeId" asp-for="UserProfile.UserTypeId" class="form-control">
                            <option value="">Select User Type</option>
                            @foreach (UserType type in Model.UserTypes)
                            {
                                <option value="@type.Id">@type.Name</option>
                            }
                        </select>
                        <span asp-validation-for="UserProfile.UserTypeId" class="text-danger"></span>
                    </div>
                    <div class="form-group ml-4">
                        <input type="submit" value="Change" class="btn btn-primary btn-block">
                        <input type="button" value="Cancel" class="btn btn-primary btn-block" onclick="location.href='@Url.Action("Index","UserProfile")';" />
                    </div>
                </form>
        </section>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
